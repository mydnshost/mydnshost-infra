---

services:
  logspout:
    image: bekt/logspout-logstash:latest
    restart: always
    container_name: mydnshost_logspout
    command: 'logstash://logger:5000?filter.labels=mydnshost.log:true'
    environment:
      - INACTIVITY_TIMEOUT=1m
    networks:
      - mydnshost-internal
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  logger:
    image: logstash:7.3.0
    restart: always
    container_name: mydnshost_logger
    command: -f /logstash.conf
    environment:
      LS_JAVA_OPTS: "-Xmx256m -Xms256m"
    networks:
      - mydnshost-internal
    volumes:
     - ./logstash/logstash.conf:/logstash.conf

  proxy:
    image: traefik:latest
    container_name: mydnshost_proxy
    restart: always
    network_mode: host
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./traefik/traefik.yaml:/traefik.yaml
      - ./traefik/acme.json:/acme.json
    labels:
      mydnshost.log: "true"
      traefik.http.middlewares.proxy-auth.basicauth.users: "user:$$apr1$$MaV/E6fT$$vmOmd5I4TKc2O37If4MxM0"
      traefik.http.routers.proxy.rule: "Host(`traefik.dev.mydnshost.co.uk`)"
      traefik.http.routers.proxy.service: "api@internal"
      traefik.http.routers.proxy.middlewares: "security-headers, proxy-auth"
      traefik.http.services.proxy-service.loadbalancer.server.port: "443"
      traefik.http.middlewares.security-headers.headers.stsSeconds: "31536000"
      traefik.http.middlewares.security-headers.headers.stsPreload: "true"
      traefik.http.middlewares.security-headers.headers.stsIncludeSubdomains: "true"
      traefik.enable: "true"

  static:
    image: pierrezemb/gostatic
    hostname: static
    command: -fallback web-error.html
    container_name: mydnshost_static
    restart: always
    networks:
      - mydnshost-internal
    volumes:
      - ./static-pages:/srv/http
    labels:
      mydnshost.log: "true"
      # I'd really like to not have this, but traefik won't let me
      # have a backend-only container it insists on having a matching frontend.
      # So here we are...
      traefik.http.routers.static.rule: "Host(`static.dev.mydnshost.co.uk`)"
      traefik.http.routers.static.middlewares: "security-headers"
      traefik.http.services.static.loadbalancer.server.port: "8043"
      traefik.enable: "true"

  web:
    image: registry.shanemcc.net/mydnshost-public/frontend:latest
    scale: 1
    hostname: www
    domainname: mydnshost.co.uk
    environment:
      - SITE_NAME=MyDNSHost
      - API_URL=http://api/
      - TEMPLATE_THEME=default
      - REDIS_HOST=redis
    restart: always
    networks:
      - mydnshost-internal
    depends_on:
      - api
    volumes:
      - ./frontend-config.local.php:/dnsfrontend/config.local.php
    labels:
      mydnshost.log: "true"
      traefik.enable: "true"
      traefik.http.routers.web.rule: "Host(`dev.mydnshost.co.uk`) || Host(`www.dev.mydnshost.co.uk`)"
      traefik.http.middlewares.web-nowww.redirectregex.regex: "^https?://www.([^/]*)/(.*)"
      traefik.http.middlewares.web-nowww.redirectregex.replacement: "https://$${1}/$${2}"
      traefik.http.routers.web.middlewares: "security-headers, web-errorpage, web-nowww"
      traefik.http.services.web.loadbalancer.server.port: "80"
      traefik.http.middlewares.web-errorpage.errors.status: "500-599"
      traefik.http.middlewares.web-errorpage.errors.service: "static"
      traefik.http.middlewares.web-errorpage.errors.query: "/web-error.html"

  api:
    image: registry.shanemcc.net/mydnshost-public/api:latest
    scale: 1
    hostname: api
    domainname: mydnshost.co.uk
    environment:
      - DB_SERVER=database
      - DB_SERVER_TYPE=mysql
      - DB_SERVER_USERNAME=dnsapi
      - DB_SERVER_PASSWORD=dnsapi
      - DB_SERVER_DATABASE=dnsapi
      - REDIS_HOST=redis
      - INFLUX_HOST=influxdb
      - RABBITMQ_HOST=rabbitmq
      - MONGO_HOST=mongo
    restart: always
    networks:
      - mydnshost-internal
    depends_on:
      - database
      - rabbitmq
    volumes:
      - ./volumes/bind-data:/bind
      - ./api-config.local.php:/dnsapi/config.local.php
      - ./rndc_rndc.conf:/etc/bind/rndc.conf
      - /var/run/docker.sock:/var/run/docker.sock
    labels:
      mydnshost.log: "true"
      traefik.enable: "true"
      traefik.http.routers.api.rule: "Host(`devapi.mydnshost.co.uk`)"
      traefik.http.routers.api.middlewares: "security-headers, api-errorpage"
      traefik.http.services.api.loadbalancer.server.port: "80"
      traefik.http.middlewares.api-errorpage.errors.status: "500-599"
      traefik.http.middlewares.api-errorpage.errors.service: "static"
      traefik.http.middlewares.api-errorpage.errors.query: "/api-error.json"

  joblogger:
    image: registry.shanemcc.net/mydnshost-public/joblogger:latest
    container_name: mydnshost_joblogger
    hostname: joblogger
    domainname: mydnshost.co.uk
    environment:
      - DB_SERVER=database
      - DB_SERVER_TYPE=mysql
      - DB_SERVER_USERNAME=dnsapi
      - DB_SERVER_PASSWORD=dnsapi
      - DB_SERVER_DATABASE=dnsapi
      - REDIS_HOST=redis
      - RABBITMQ_HOST=rabbitmq
    restart: always
    networks:
      - mydnshost-internal
    depends_on:
      - api
      - rabbitmq
    volumes:
      - ./api-config.local.php:/dnsapi/config.local.php
    labels:
      mydnshost.log: "true"

  containerlogger:
    image: registry.shanemcc.net/mydnshost-public/containerlogger:latest
    container_name: mydnshost_containerlogger
    hostname: containerlogger
    domainname: mydnshost.co.uk
    environment:
      - RABBITMQ_HOST=rabbitmq
      - MONGO_HOST=mongo
    restart: always
    networks:
      - mydnshost-internal
    depends_on:
      - api
      - rabbitmq
    volumes:
      - ./api-config.local.php:/dnsapi/config.local.php

  dispatcher:
    image: registry.shanemcc.net/mydnshost-public/dispatcher:latest
    container_name: mydnshost_dispatcher
    hostname: dispatcher
    domainname: mydnshost.co.uk
    environment:
      - DB_SERVER=database
      - DB_SERVER_TYPE=mysql
      - DB_SERVER_USERNAME=dnsapi
      - DB_SERVER_PASSWORD=dnsapi
      - DB_SERVER_DATABASE=dnsapi
      - REDIS_HOST=redis
      - RABBITMQ_HOST=rabbitmq
    restart: always
    networks:
      - mydnshost-internal
    depends_on:
      - api
      - rabbitmq
    volumes:
      - ./api-config.local.php:/dnsapi/config.local.php
    labels:
      mydnshost.log: "true"

  gmworker1:
    image: registry.shanemcc.net/mydnshost-public/workers:latest
    container_name: mydnshost_gmworker1
    hostname: gmworker1
    domainname: mydnshost.co.uk
    environment:
      - DB_SERVER=database
      - DB_SERVER_TYPE=mysql
      - DB_SERVER_USERNAME=dnsapi
      - DB_SERVER_PASSWORD=dnsapi
      - DB_SERVER_DATABASE=dnsapi
      - EMAIL_ENABLED=false
      - EMAIL_SERVER=
      - EMAIL_USERNAME=
      - EMAIL_PASSWORD=
      - EMAIL_FROM=dns@example.org
      - REDIS_HOST=redis
      - INFLUX_HOST=influxdb
      - DNSSEC_DSKEY_FILES=/bind/keys
      - WORKER_WORKERS=*,-verify_2fa_push,-call_domain_hooks
      - RABBITMQ_HOST=rabbitmq
    restart: always
    networks:
      - mydnshost-internal
    depends_on:
      - api
    volumes:
      - ./volumes/bind-data:/bind
      - ./api-config.local.php:/dnsapi/config.local.php
      - ./rndc_rndc.conf:/etc/bind/rndc.conf
    labels:
      mydnshost.log: "true"

  gmworker2:
    image: registry.shanemcc.net/mydnshost-public/workers:latest
    container_name: mydnshost_gmworker2
    hostname: gmworker2
    domainname: mydnshost.co.uk
    environment:
      - DB_SERVER=database
      - DB_SERVER_TYPE=mysql
      - DB_SERVER_USERNAME=dnsapi
      - DB_SERVER_PASSWORD=dnsapi
      - DB_SERVER_DATABASE=dnsapi
      - WORKER_WORKERS=verify_2fa_push,call_domain_hooks
      - RABBITMQ_HOST=rabbitmq
      - REDIS_HOST=redis
    restart: always
    networks:
      - mydnshost-internal
    depends_on:
      - api
    volumes:
      - ./volumes/bind-data:/bind
      - ./api-config.local.php:/dnsapi/config.local.php
      - ./rndc_rndc.conf:/etc/bind/rndc.conf
    labels:
      mydnshost.log: "true"

  database:
    image: mysql:5.7
    container_name: mydnshost_database
    hostname: database
    domainname: mydnshost.co.uk
    environment:
      - MYSQL_USER=dnsapi
      - MYSQL_PASSWORD=dnsapi
      - MYSQL_DATABASE=dnsapi
      - MYSQL_ROOT_PASSWORD=isukr7hgtistg
    restart: always
    volumes:
      - ./volumes/db-data:/var/lib/mysql
    networks:
      - mydnshost-internal
    labels:
      mydnshost.log: "true"
      uk.co.mydnshost.maintenance.db.backup: "true"
      uk.co.mydnshost.maintenance.db.user: "dnsapi"
      uk.co.mydnshost.maintenance.db.pass: "dnsapi"
      uk.co.mydnshost.maintenance.db.dbs: "dnsapi"

  maintenance:
    image: registry.shanemcc.net/mydnshost-public/maintenance:latest
    container_name: mydnshost_maintenance
    hostname: maintenance
    domainname: mydnshost.co.uk
    restart: always
    environment:
      - API_URL=https://api.mydnshost.co.uk/
      - API_DOMAIN=test.example.org
      - API_RRNAMES=foobar,bazqux
      - API_DOMAINKEY=SomeKey
      - STATUSCAKE_USER=SomeUser
      - STATUSCAKE_APIKEY=SomeKey
      - STATUSCAKE_TESTIDS=12345,67890
      - INFLUX_HOST=influxdb
      - INFLUX_BIND_SLAVES=ns1=1.1.1.1, ns2=2.2.2.2, ns3=3.3.3.3
      - RABBITMQ_HOST=rabbitmq
      - REDIS_HOST=redis
    volumes:
      - ./maintenance/output:/output
      - /var/run/docker.sock:/var/run/docker.sock
      - ./volumes/bind-data:/bind
    networks:
      - mydnshost-internal
    depends_on:
      - api
    labels:
      mydnshost.log: "true"

  bind:
    image: registry.shanemcc.net/mydnshost-public/bind:9.16.21
    container_name: mydnshost_bind
    hostname: bind
    domainname: mydnshost.co.uk
    environment:
      - RUNMODE=MASTER
      - MASTER=1.1.1.1;
      - SLAVES=2.2.2.2; 3.3.3.3; 4.4.4.4;
      - STATISTICS=any;
      - RNDCKEY=DTngw5O8I5Axx631GjQ9pA==
    restart: always
    networks:
      - mydnshost-internal
    depends_on:
      - api
    volumes:
      - ./volumes/bind-data:/bind
      - ./volumes/bind-data:/etc/bind/data
      - ./bind_rndc.conf:/etc/bind/rndc.controls.conf
    labels:
      mydnshost.log: "true"

  influxdb:
    image: influxdb:1.8-alpine
    container_name: mydnshost_influxdb
    hostname: influxdb
    domainname: mydnshost.co.uk
    restart: always
    networks:
      - mydnshost-internal
    volumes:
      - ./volumes/influxdb-data:/var/lib/influxdb
    labels:
      mydnshost.log: "true"

  chronograf:
    image: chronograf:alpine
    container_name: mydnshost_chronograf
    hostname: chronograf
    domainname: mydnshost.co.uk
    restart: always
    networks:
      - mydnshost-internal
    volumes:
      - ./volumes/chronograf-data:/var/lib/chronograf
    environment:
      - TOKEN_SECRET=SomeKindOfSecret
      - AUTH_DURATION=1h
      - GH_CLIENT_ID=
      - GH_CLIENT_SECRET=
      - GH_ORGS=
      - INFLUXDB_URL=http://influxdb:8086/
    labels:
      traefik.enable: "true"
      traefik.http.routers.chronograf.rule: "Host(`chronograf.dev.mydnshost.co.uk`)"
      traefik.http.routers.chronograf.middlewares: "security-headers"
      traefik.http.services.chronograf.loadbalancer.server.port: "8888"
      mydnshost.log: "true"

  redis:
    image: redis:latest
    container_name: mydnshost_redis
    hostname: redis
    domainname: mydnshost.co.uk
    restart: always
    networks:
      - mydnshost-internal
    volumes:
      - ./volumes/redis-data:/data
    labels:
      mydnshost.log: "true"

  mongo:
    image: mongo:4.4
    container_name: mydnshost_mongo
    hostname: mongo
    domainname: mydnshost.co.uk
    restart: always
    networks:
      - mydnshost-internal
    volumes:
      - ./volumes/mongo-data:/data/db
    labels:
      mydnshost.log: "true"

  rabbitmq:
    image: rabbitmq:3.10-management
    container_name: mydnshost_rabbitmq
    hostname: rabbitmq
    domainname: mydnshost.co.uk
    restart: always
    networks:
      - mydnshost-internal
    volumes:
      - ./volumes/rabbitmq-log:/var/log/rabbitmq
      - ./volumes/rabbitmq-data:/var/lib/rabbitmq
    environment:
      - RABBITMQ_FEATURE_FLAGS=quorum_queue,implicit_default_bindings,virtual_host_metadata,maintenance_mode_status,user_limits
    labels:
      traefik.http.middlewares.rabbitmq-auth.basicauth.users: "user:$$apr1$$MaV/E6fT$$vmOmd5I4TKc2O37If4MxM0"
      traefik.http.routers.rabbitmq.rule: "Host(`rabbitmq.dev.mydnshost.co.uk`)"
      traefik.http.routers.rabbitmq.middlewares: "rabbitmq-auth, security-headers"
      traefik.http.services.rabbitmq.loadbalancer.server.port: "15672"
      traefik.enable: "true"
      mydnshost.log: "true"

volumes:

  db-data:

  bind-data:

  influxdb-data:

  chronograf-data:

  redis-data:

  mongo-data:

  rabbitmq-log:

  rabbitmq-data:

networks:

  mydnshost-internal:
